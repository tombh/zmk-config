// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define BASE  0
#define SETTINGS 1

/ {

    chosen {
        zmk,charmap = &charmap_us;
    };
	
	  macros {
				// Sometimes the keyboard thinks a modifier is being held down,
				// pressing all modifiers fixes it.
				unstick: unstick {
					label = "ZM_unstick";
					compatible = "zmk,behavior-macro";
					#binding-cells = <0>;
					bindings
						= <&kp LSHIFT &kp RSHIFT &kp LCTRL &kp RCTRL &kp LALT &kp RALT &kp LGUI &kp RGUI>;
				};
		};
  
	  behaviors {
        td_shift_layer: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LSHIFT>, <&kp LSHIFT>, <&mo SETTINGS>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
								&kp Q  &kp W  &kp E  &kp R            &kp T           &kp Y      &kp U      &kp I      &kp O    &kp P
								&kp A  &kp S  &kp D  &kp F            &kp G           &kp H      &kp J      &kp K      &kp L    &kp SEMICOLON
								&kp Z  &kp X  &kp C  &kp V            &kp B           &kp N      &kp M      &kp COMMA  &kp DOT  &kp FSLH
																		 &td_shift_layer  &kp LEFT_ALT    &kp SPACE  &kp RCTRL
            >;
        };

       	settings_layer {
		        bindings = <
							  &bootloader &none &none &bt BT_CLR &bt BT_SEL 0   &bt BT_SEL 3 &none &unstick &none &bootloader 
							  &none       &none &none &none      &bt BT_SEL 1 	&bt BT_SEL 4 &none &none    &none &none
							  &none       &none &none &none      &bt BT_SEL 2   &bt BT_SEL 5 &none &none    &none &none
								  											&none      &none          &none        &none 
						>;
		    };

    };
};
